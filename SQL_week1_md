# SQL Advanced 1주차 과제

## 14.20.1 윈도우 함수 개념
- 윈도우 함수는 쿼리 행 집합에 대해 집계와 유사한 연산을 수행

- 쿼리 행 그룹을 단일 출력 행으로 축소하지 않고 각 행에 대한 결과를 생성
```sql
mysql> SELECT
         year, country, product, profit,
         SUM(profit) OVER() AS total_profit,
         SUM(profit) OVER(PARTITION BY country) AS country_profit
       FROM sales
       ORDER BY country, year, product, profit;
+------+---------+------------+--------+--------------+----------------+
| year | country | product    | profit | total_profit | country_profit |
+------+---------+------------+--------+--------------+----------------+
| 2000 | Finland | Computer   |   1500 |         7535 |           1610 |
| 2000 | Finland | Phone      |    100 |         7535 |           1610 |
| 2001 | Finland | Phone      |     10 |         7535 |           1610 |
| 2000 | India   | Calculator |     75 |         7535 |           1350 |
| 2000 | India   | Calculator |     75 |         7535 |           1350 |
| 2000 | India   | Computer   |   1200 |         7535 |           1350 |
| 2000 | USA     | Calculator |     75 |         7535 |           4575 |
| 2000 | USA     | Computer   |   1500 |         7535 |           4575 |
| 2001 | USA     | Calculator |     50 |         7535 |           4575 |
| 2001 | USA     | Computer   |   1200 |         7535 |           4575 |
| 2001 | USA     | Computer   |   1500 |         7535 |           4575 |
| 2001 | USA     | TV         |    100 |         7535 |           4575 |
| 2001 | USA     | TV         |    150 |         7535 |           4575 |
+------+---------+------------+--------+--------------+----------------+
```
- 첫 번째 OVER절은 비어 있어 쿼리 행의 전체 집합을 단일 파티션으로 취급
- 두 번째 OVER절은 국가별로 행을 분할하여 합계를 생성

윈도우 함수는 오직 `SELECT` 목록과 `ORDER BY` 절에서만 허용됨
 
쿼리 결과 행은 `FROM` 절에서 결정되며 이는 `WHERE`, `GROUP BY`, `HAVING` 처리가 끝난 후 수행됨

윈도우 함수의 실행은 `ORDER BY`, `LIMIT`, `SELECT DISTINCT`보다 먼저 이루어짐

- 윈도우 함수에서 쓰이는 집계 함수
```sql
AVG()
BIT_AND()
BIT_OR()
BIT_XOR()
COUNT()
JSON_ARRAYAGG()
JSON_OBJECTAGG()
MAX()
MIN()
STDDEV_POP(), STDDEV(), STD()
STDDEV_SAMP()
SUM()
VAR_POP(), VARIANCE()
VAR_SAMP()
```

- 윈도우 함수에서 쓰이는 비집계 함수
```sql
CUME_DIST()
DENSE_RANK()
FIRST_VALUE()
LAG()
LAST_VALUE()
LEAD()
NTH_VALUE()
NTILE()
PERCENT_RANK()
RANK()
ROW_NUMBER()
``` 

**OVER (window_spec) 구문에서(window_spec)은 여러 부분으로 구성**

```sql
window_spec:
    [window_name] [partition_clause] [order_clause] [frame_clause]
``` 
OVER()가 비어 있으면 윈도우는 모든 쿼리 행을 포함하며 윈도우 함수는 모든 행을 사용하여 결과를 계산

괄호 안에 포함된 절이 있으면 그 절이 함수 결과를 계산할 때 사용할 쿼리 행을 골라 파티셔닝하고 정렬할지를 지정

**window_spec의 구성요소**
- window_name:

쿼리의 WINDOW 절에서 정의된 윈도우의 이름

OVER 절 내에서 window_name만 단독으로 사용하면 해당 이름이 윈도우를 완전히 정의

`PARTITION BY`, `ORDER BY`, `FRAME` 절이 추가되면, 지정된 윈도우 정의를 수정하여 적용


- partition_clause (파티션 절):

`PARTITION BY` 절은 쿼리 행을 그룹으로 나누는 방식을 지정

특정 행의 윈도우 함수 결과는 해당 행이 속한 파티션 내의 행들을 기반으로 계산

`PARTITION BY`가 생략되면 모든 쿼리 행이 하나의 단일 파티션으로 간주

`ROW NUMBER`
`RANK`
`DENSE RANK`